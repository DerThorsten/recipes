diff --git a/modules/error_manager/src/cpp/Error.cpp b/modules/error_manager/src/cpp/Error.cpp
index d4478e8be..9a4dd26af 100644
--- a/modules/error_manager/src/cpp/Error.cpp
+++ b/modules/error_manager/src/cpp/Error.cpp
@@ -12,6 +12,20 @@
 #include "characters_encoding.hpp"
 #include "Exception.hpp"
 #include "DynamicLibrary.hpp"
+
+
+#ifdef __cplusplus
+extern "C"
+{
+#endif
+    //=============================================================================
+    NLSINTERPRETER_IMPEXP void
+    NelsonErrorEmitter(const wchar_t* msg, const wchar_t* id, bool asCaller);
+//=============================================================================
+#ifdef __cplusplus
+}
+#endif
+
 //=============================================================================
 namespace Nelson {
 //============================================================================
@@ -20,7 +34,8 @@ static bool bFirstDynamicLibraryCall = true;
 //============================================================================
 static void
 initInterpreterDynamicLibrary()
-{
+{   
+    bFirstDynamicLibraryCall = false;
     if (bFirstDynamicLibraryCall) {
         std::string fullpathInterpreterSharedLibrary
             = "libnlsInterpreter" + Nelson::get_dynamic_library_extension();
@@ -57,7 +72,7 @@ initInterpreterDynamicLibrary()
 void
 Error(const std::wstring& msg, const std::wstring& id, bool asCaller)
 {
-    using PROC_NelsonErrorEmitter = void (*)(const wchar_t*, const wchar_t*, bool);
+    /*using PROC_NelsonErrorEmitter = void (*)(const wchar_t*, const wchar_t*, bool);
     static PROC_NelsonErrorEmitter NelsonErrorEmitterPtr = nullptr;
     initInterpreterDynamicLibrary();
     if (NelsonErrorEmitterPtr == nullptr) {
@@ -66,7 +81,8 @@ Error(const std::wstring& msg, const std::wstring& id, bool asCaller)
     }
     if (NelsonErrorEmitterPtr != nullptr) {
         NelsonErrorEmitterPtr(msg.c_str(), id.c_str(), asCaller);
-    }
+    }*/
+    NelsonErrorEmitter(msg.c_str(), id.c_str(), asCaller);
 }
 //=============================================================================
 void
